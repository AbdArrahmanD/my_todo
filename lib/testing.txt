Occaecat non adipisicing qui aliquip pariatur aliquip. Officia nulla consectetur dolor nulla duis dolor veniam ut. Sit aliquip deserunt eu ut consequat deserunt. Occaecat deserunt occaecat Lorem magna aute. Est nostrud mollit reprehenderit amet qui aute officia pariatur nulla eu ea. Sit quis dolor ad ullamco laboris voluptate est ex reprehenderit dolor velit mollit. Irure non nulla do aute veniam nulla ut deserunt dolore.



 scheduledNotification(int hour, int minutes, Task task) async {
    await flutterLocalNotificationsPlugin.zonedSchedule(
      task.id!,
      task.title,
      task.note,
      //tz.TZDateTime.now(tz.local).add(const Duration(seconds: 5)),
      _nextInstanceOfTenAM(hour, minutes),
      const NotificationDetails(
        android: AndroidNotificationDetails(
            'your channel id', 'your channel name', 'your channel description'),
      ),
      androidAllowWhileIdle: true,
      uiLocalNotificationDateInterpretation:
          UILocalNotificationDateInterpretation.absoluteTime,
      matchDateTimeComponents: DateTimeComponents.time,
      payload: '${task.title}|${task.note ?? ' '}|${task.startTime}|',
    );
  }

  Future<void> setNotification({
    required int hour,
    required int minutes,
    required Task task,
  }) async {
    await flutterLocalNotificationsPlugin.zonedSchedule(
      task.id!, // id may be null when creating task
      task.title,
      task.note,
      _nextInstanceOfTenAM(hour, minutes),
      const NotificationDetails(
        android: AndroidNotificationDetails(
            'main_channel', 'Main Channel', 'Main channel notifications',
            importance: Importance.max,
            priority: Priority.max,
            icon: '@drawable/ic_stat_check'),
        iOS: IOSNotificationDetails(
          sound: 'default.wav',
          presentAlert: true,
          presentBadge: true,
          presentSound: true,
        ),
      ),
      uiLocalNotificationDateInterpretation:
          UILocalNotificationDateInterpretation.absoluteTime,
      androidAllowWhileIdle: true,
    );
  }